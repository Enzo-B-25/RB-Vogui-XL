!/usr/bin/env python3

import rospy
import socket
import subprocess
import os
import struct
from std_msgs.msg import String

# Variables globales
STREAM_ON = 1
STREAM_OFF = 0
stream_state = STREAM_OFF
process = None  # Pour éviter les erreurs si aucun processus n'est lancé

# Adresse IP et port local
LOCAL_IP = "192.168.0.200"
LOCAL_PORT = 5001
DEVICE = "/dev/video2"

# Création du socket UDP
sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
sock.bind((LOCAL_IP, LOCAL_PORT))

# Initialisation du nœud ROS
rospy.init_node('udp_stream_server', anonymous=True)
status_pub = rospy.Publisher('stream_status', String, queue_size=10)
rospy.loginfo("Noeud UDP Stream Server démarré")

while not rospy.is_shutdown():
    try:
        # Réception du message du client
        data, addr = sock.recvfrom(1024)
       
        # Conversion du message en entier
        entier_received, remote_ip_bytes, remote_port = struct.unpack("!i 13s i", data)
        remote_ip = remote_ip_bytes.decode().strip('\x00')
       
        if entier_received == 1:  # Lancement du stream
            if stream_state == STREAM_OFF:
                cmd_open = [
                    "gst-launch-1.0", "-v", "v4l2src", "device=/dev/video2",
                    "!", "video/x-raw,framerate=20/1",
                    "!", "videoscale",
                    "!", "clockoverlay", "time-format=%H:%M:%S",
                    "!", "videoconvert",
                    "!", "x264enc", "tune=zerolatency", "bitrate=500", "speed-preset=superfast",
                    "!", "rtph264pay",
                    "!", "udpsink host=192.168.0.172 port=5001"
                ]
                process = subprocess.Popen(cmd_open)
                stream_state = STREAM_ON
                response = "Le stream est lancé"
            else:
                response = "Le stream est DEJA lancé"
        elif entier_received == 2:  # Arrêt du stream
            if process:
                process.terminate()
                process = None
            stream_state = STREAM_OFF
            response = "Le stream est arrêté"
        else:
            response = "Entier invalide"
       
        # Envoi de la réponse au client
        sock.sendto(response.encode(), addr)
        status_pub.publish(response)
        rospy.loginfo(response)
    except Exception as e:
        rospy.logerr(f"Erreur: {e}")
        break

# Fermeture du socket
sock.close()
